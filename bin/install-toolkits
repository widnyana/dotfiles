#!/usr/bin/env bash
set -euo pipefail
set -x

source ~/.dotfiles/functions.sh
source ~/.dotfiles/common/colors

LOCAL_BIN="${HOME}/.local/bin"

DEPENDENCIES=""

PACKAGES="zsh \
policycoreutils \
python3-policycoreutils \
tree \
ncdu \
htop \
iotop \
iftop \
tmux \
the_silver_searcher \
ripgrep \
fd-find \
"

sudo dnf install ${PACKAGES} -y

#: ensure we have pip
python3 -m ensurepip

#: vscode
sudo rpm --import https://packages.microsoft.com/keys/microsoft.asc
sudo sh -c 'echo -e "[code]\nname=Visual Studio Code\nbaseurl=https://packages.microsoft.com/yumrepos/vscode\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc" > /etc/yum.repos.d/vscode.repo'
sudo dnf update; sudo dnf install code -y

#: facebook path picker
FPP_DEST="${LOCAL_BIN}/path_picker"
git clone --depth=1 https://github.com/facebook/PathPicker.git    "${FPP_DEST}"
ln -s "${FPP_DEST}/fpp"                                 "${LOCAL_BIN}/fpp"

#: terracognita
curl -L https://github.com/cycloidio/terracognita/releases/latest/download/terracognita-linux-amd64.tar.gz -o terracognita-linux-amd64.tar.gz
tar -xf terracognita-linux-amd64.tar.gz
chmod u+x terracognita-linux-amd64
sudo mv terracognita-linux-amd64 $HOME/.local/bin/terracognita
rm -rf terracognita-linux-amd64.tar.gz

#: VIm
mkdir ~/.vim
curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

#: NeoVIM
#: ========================================
# The Tectonic Typesetting System - https://tectonic-typesetting.github.io
curl --proto '=https' --tlsv1.2 -fsSL https://drop-sh.fullyjustified.net | sh && mv ./tectonic "${LOCAL_BIN}/tectonic"

#: Kubernetes
#: ========================================

#: kubectl
curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" && mv ./kubectl "${LOCAL_BIN}/kubectl" && chmod a+x "${LOCAL_BIN}/kubectl"

#: krew
(
  set -x; cd "$(mktemp -d)" &&
  OS="$(uname | tr '[:upper:]' '[:lower:]')" &&
  ARCH="$(uname -m | sed -e 's/x86_64/amd64/' -e 's/\(arm\)\(64\)\?.*/\1\2/' -e 's/aarch64$/arm64/')" &&
  KREW="krew-${OS}_${ARCH}" &&
  curl -fsSLO "https://github.com/kubernetes-sigs/krew/releases/latest/download/${KREW}.tar.gz" &&
  tar zxvf "${KREW}.tar.gz" &&
  ./"${KREW}" install krew
)


#: K9S
K9S_INSTALL_PATH="${LOCAL_BIN}/k9s"
K9S_LATEST_VERSION=$(gh_latest_release derailed/k9s)
echo -e "${CYAN}Installing k9s version: ${BOLD}${K9S_LATEST_VERSION}${NORMAL} ${CYAN}to ${K9S_INSTALL_PATH} ...${NORMAL}"
curl -L https://github.com/derailed/k9s/releases/download/${K9S_LATEST_VERSION}/k9s_Linux_amd64.tar.gz -o /tmp/k9s-linux-amd64.tar.gz
tar -xf /tmp/k9s-linux-amd64.tar.gz -C /tmp
chmod u+x /tmp/k9s
mv /tmp/k9s ${K9S_INSTALL_PATH}
rm -fr /tmp/k9s-linux-amd64.tar.gz

#: pre-commit - A framework for managing and maintaining multi-language pre-commit hooks - https://pre-commit.com/
pip install pre-commit --user

#: that's all, folks!
echo -e "${CYAN}Done!${NORMAL}"