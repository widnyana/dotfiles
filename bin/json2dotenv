#!/usr/bin/env python3

import argparse
import json
import os
import sys


def convert(incoming: str):
    raw = json.loads(incoming)
    if not isinstance(raw, dict):
        raise ValueError("expecting object")

    destination = ".env"
    if os.path.exists(os.path.join(os.getcwd(), ".env")):
        destination = ".env.new"

    with open(destination, "w") as f:
        f.flush()
        f.seek(0)

        for k, v in raw.items():
            f.write(f'{k}="{v}"\n')

    print(f"written to {destination}")


def main():
    parser = argparse.ArgumentParser(
        description="Take a json exported from Hashicorp Vault and convert it to .env file",
    )
    args = parse_arguments(parser)
    if args.secret:
        secret_string = args.secret.read()

    elif not sys.stdin.isatty():
        secret_string = sys.stdin.read()

    else:
        parser.print_help()
        return 1

    try:
        convert(secret_string)
        return 0

    except ValueError as e:
        print(e)
        return 1


def parse_arguments(parser: argparse.ArgumentParser):
    parser.add_argument("secret", nargs="?", type=argparse.FileType("r"), default=sys.stdin)
    parser.add_argument("--outfile", "-o", nargs="?", type=argparse.FileType("w"), default=sys.stdout)
    parser.add_argument("--format", "-f", type=str, help="Format of the secret", required=False)
    return parser.parse_args()


if __name__ == "__main__":
    exit(main())
