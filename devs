#                                     _   
#   /\   /\__ _  __ _ _ __ __ _ _ __ | |_ 
#   \ \ / / _` |/ _` | '__/ _` | '_ \| __|
#    \ V / (_| | (_| | | | (_| | | | | |_ 
#     \_/ \__,_|\__, |_|  \__,_|_| |_|\__|
#               |___/                     
export VAGRANT_HOME=$HOME/Development/.vagrant.d

#     __     _                      ___       __ _ _      _      
#    /__\ __| | __ _ _ __   __ _   ( _ )     /__\ (_)_  _(_)_ __ 
#   /_\| '__| |/ _` | '_ \ / _` |  / _ \/\  /_\ | | \ \/ / | '__|
#  //__| |  | | (_| | | | | (_| | | (_>  < //__ | | |>  <| | |   
#  \__/|_|  |_|\__,_|_| |_|\__, |  \___/\/ \__/ |_|_/_/\_\_|_|   
#                          |___/                                 
if [ -f ~/.kerlrc ]; then
  source ~/.kerlrc
else
  export KERL_BASE_DIR=$HOME/Development/bin/.kerl
  export KERL_DEFAULT_INSTALL_DIR=$KERL_BASE_DIR/installs
  export KERL_BUILD_BACKEND=git
  export KERL_CONFIGURE_OPTIONS="--enable-smp-support --enable-threads --enable-kernel-poll --enable-m64-build"
  export KERL_BUILD_DOCS=yes
  export OTP_GITHUB_URL="https://github.com/erlang/otp"
fi 
test -s "$HOME/Development/.kiex/scripts/kiex" && source "$HOME/Development/.kiex/scripts/kiex"


#       __ _      
#    /\ \ (_)_  __
#   /  \/ / \ \/ /
#  / /\  /| |>  < 
#  \_\ \/ |_/_/\_\
#                 
if [ -d /nix ] && [ -f $HOME/.nix-profile/etc/profile.d/nix.sh ]; then
  source $HOME/.nix-profile/etc/profile.d/nix.sh
fi

if [ -d $HOME/.config/composer/vendor ]; then
  export PATH=$PATH:$HOME/.config/composer/vendor/bin
fi


if [ $TILIX_ID ] || [ $VTE_VERSION ]; then
  source /etc/profile.d/vte.sh
fi




## FLutter
export PATH=$PATH:$HOME/Development/bin/flutter/bin


### Telepresence
export SCOUT_DISABLE=1

### Google Cloud SDK
export USE_GKE_GCLOUD_AUTH_PLUGIN=True
export CLOUDSDK_PYTHON_SITEPACKAGES=1
export CLOUDSDK_HOME=/usr/share/google-cloud-sdk
source "${CLOUDSDK_HOME}/completion.zsh.inc"

# NextJS
NEXT_TELEMETRY_DISABLED=1

### GitLab
eval "$(register-python-argcomplete gitlab)"


export PATH="${PATH}:$HOME/.istioctl/bin"


#export CC=clang
#export CXX=clang++

export CC=gcc
export CXX=g++
