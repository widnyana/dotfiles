#!/usr/bin/env bash
# set default editor
export EDITOR=nvim

#   ┓•              
#  ┏┫┓┏┓┏┓┏┓┓┏ ┏┓┏┓╋
#  ┗┻┗┛ ┗ ┛┗┗┛•┛┗┗ ┗
#                   
if [[ -x "$(command -v direnv)" ]]; then
  eval "$(direnv hook zsh)"
fi


#  ┏┓  ┓             ┓  ┏┓┓•  •  
#  ┣ ┏┓┃┏┓┏┓┏┓  ┏┓┏┓┏┫  ┣ ┃┓┓┏┓┏┓
#  ┗┛┛ ┗┗┻┛┗┗┫  ┗┻┛┗┗┻  ┗┛┗┗┛┗┗┛ 
#            ┛                   
if [ -f "${HOME}/.kerlrc" ]; then
  # shellcheck source=/dev/null
  source "${HOME}/.kerlrc"
else 
  export KERL_BASE_DIR=$HOME/Development/bin/.kerl
  export KERL_DEFAULT_INSTALL_DIR=$KERL_BASE_DIR/installs
  export KERL_BUILD_BACKEND=git
  export KERL_CONFIGURE_OPTIONS="--enable-smp-support --enable-threads --enable-kernel-poll --enable-m64-build"
  export KERL_BUILD_DOCS=yes
  export OTP_GITHUB_URL="https://github.com/erlang/otp"

  mkdir -p "${KERL_BASE_DIR}"
fi 

# shellcheck source=/dev/null
test -s "$HOME/Development/.kiex/scripts/kiex" && source "$HOME/Development/.kiex/scripts/kiex"


#       __ _      
#    /\ \ (_)_  __
#   /  \/ / \ \/ /
#  / /\  /| |>  < 
#  \_\ \/ |_/_/\_\
#                 
if [ -d /nix ] && [ -f "$HOME/.nix-profile/etc/profile.d/nix.sh" ]; then
  # shellcheck source=/dev/null
  source "$HOME/.nix-profile/etc/profile.d/nix.sh"
fi


#: Flutter
if [ -d "${HOME}/Development/sdks/flutter" ]; then 
  export PATH=$PATH:$HOME/Development/sdks/flutter/bin
fi

#: Telepresence
export SCOUT_DISABLE=1

export CC=clang
export CXX=clang++

#export CC=gcc
#export CXX=g++

# use ajeetdsouza/zoxide if available
if [[ -x "$(command -v zoxide)" ]]; then
    eval "$(zoxide init zsh --hook pwd)"
fi

# always use nvim, if available
if [[ -x "$(command -v nvim)" ]]; then
  alias vim='$(which nvim)'
  alias vi='$(which nvim)'
  alias nv='$(which nvim)'
fi




# disable any IBM telemetry
# https://github.com/ibm-telemetry/telemetry-js/tree/main#opting-out-of-ibm-telemetry-data-collection
export IBM_TELEMETRY_DISABLED='true'
