
#   _    ___                          _        _                        _       
#  | | _( _ ) ___      ___ ___  _ __ | |_ __ _(_)_ __   ___ _ __    ___| |_ ___ 
#  | |/ / _ \/ __|    / __/ _ \| '_ \| __/ _` | | '_ \ / _ \ '__|  / _ \ __/ __|
#  |   < (_) \__ \_  | (_| (_) | | | | || (_| | | | | |  __/ |_   |  __/ || (__ 
#  |_|\_\___/|___( )  \___\___/|_| |_|\__\__,_|_|_| |_|\___|_( )   \___|\__\___|
#                |/                                          |/                 

export KUBE_TMUX_BINARY=$(which kubectl)


#: Google Cloud SDK
if type "gcloud" > /dev/null; then
  export USE_GKE_GCLOUD_AUTH_PLUGIN=True
  export CLOUDSDK_PYTHON_SITEPACKAGES=1
  export CLOUDSDK_HOME=/usr/share/google-cloud-sdk
  source "${CLOUDSDK_HOME}/completion.zsh.inc"
fi 

#: kubectl autocomplete
if type "kubectl" > /dev/null; then
  source <(kubectl completion zsh)
fi

#: krew - https://github.com/kubernetes-sigs/krew
PATH=${PATH}:${KREW_ROOT:-$HOME/.krew}/bin

#: fubectl - https://github.com/kubermatic/fubectl
if ! [[ -f $HOME/.dotfiles/sources/fubectl.source ]]; then 
  wget https://raw.githubusercontent.com/kubermatic/fubectl/master/fubectl.source -O $HOME/.dotfiles/sources/fubectl.source

  #: fix conflicted alias
  sed -i "s#ked() {#kedit() {#g" $HOME/.dotfiles/sources/fubectl.source
  sed -i "s#kdel() {#kdelete() {#g" $HOME/.dotfiles/sources/fubectl.source
fi
[ -f $HOME/.dotfiles/sources/fubectl.source ] && source $HOME/.dotfiles/sources/fubectl.source

#: Minikube
if [[ -x "$(command -v minikube)" ]]; then
    export MINIKUBE_HOME=$HOME/Infrastructure/labs/minikube
    export MINIKUBE_IN_STYLE=false
fi

#: Podman
if type "podman" > /dev/null; then
  alias docker=podman
  alias docker-compose=podman-compose
  export DOCKER_HOST=unix:///run/user/1000/podman/podman.sock
fi

#: https://github.com/buildpacks/pack
if type "pack" > /dev/null; then
. $(pack completion --shell zsh)
fi

#: Helm.sh
if type "helm" > /dev/null; then
  source <(helm completion zsh)
fi


#: tfenv - Terraform version manager 
if ! [[ -f ${HOME}/Infrastructure/.tfenv/bin/tfenv ]]; then 
  echo "tfenv does not exist, installing..."
  git clone https://github.com/tfutils/tfenv.git ${HOME}/Infrastructure/.tfenv --depth=1
fi
PATH="${HOME}/Infrastructure/.tfenv/bin:${PATH}"

#: tgenv - Terragrunt version manager 
if ! [[ -f ${HOME}/Infrastructure/.tgenv/bin/tgenv ]]; then 
  echo "tgenv does not exist, installing..."
  git clone https://github.com/cunymatthieu/tgenv ${HOME}/Infrastructure/.tgenv --depth=1
fi
PATH="${HOME}/Infrastructure/.tgenv/bin:${PATH}"


if type "glab" > /dev/null; then
  source <(glab completion -s zsh); compdef _glab glab
fi


#: Hashicorp Vault
if type "vault" > /dev/null; then
  complete -o nospace -C $(which vault) vault
fi
